{
  "name": "iQmetrix DropShip Put Sales Order Schema",
  "schemaDef": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "iQmetrix Put Sales Order Schema",
    "type": "object",
    "properties": {
      "DropshipOrder": {
        "type": "object",
        "title": "OrderFull (Object) Required",
        "description": "Instead of creating an Order and then adding Items to the Order one at a time, this request can be used to create an Order with Items all at once. Note An OrderFull can only be updated in the Pending or Created state.",
        "properties": {
          "EntityId": {
            "type": "integer",
            "title": "EntityId (Integer) Required",
            "description": "Identifier for the Location."
          },
          "OrderTypeId": {
            "type": "integer",
            "title": "OrderTypeId (Integer) Required",
            "description": "See OrderType for a list of acceptable values.",
            "enum": [
              1,
              2,
              3,
              4
            ]
          },
          "Name": {
            "type": "string",
            "title": "Name (String) Optional",
            "description": "Name."
          },
          "BillingAddressId": {
            "type": "string",
            "title": "BillingAddressId (GUID) Optional",
            "description": "Unique identifier for the billing Address.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "BillingCustomerId": {
            "type": "string",
            "title": "BillingCustomerId (GUID) Optional",
            "description": "Unique identifier for the billing Customer. Must belong to the Company specified in the URI. Required to Process an Order.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "DiscountAmount": {
            "type": "number",
            "title": "DiscountAmount (Decimal) Optional",
            "description": "The value of the discount to be applied at the Order level."
          },
          "DiscountCode": {
            "type": "string",
            "title": "DiscountCode (String) Optional",
            "description": "The discount code for a discount applied to this Order."
          },
          "DiscountDescription": {
            "type": "string",
            "title": "DiscountDescription (String) Optional",
            "description": "A description of the discount."
          },
          "EmployeeId": {
            "type": "integer",
            "title": "EmployeeId (Integer) Optional",
            "description": "Identifier for the Employee who created this Order. Must belong to the Company specified in the URI."
          },
          "OrderExpiryHours": {
            "type": "integer",
            "title": "OrderExpiryHours (Integer) Optional",
            "description": "The amount of hours before this Order expires and can no longer be updated. Defaults to 72 hours."
          },
          "ShippingAddressId": {
            "type": "string",
            "title": "ShippingAddressId (GUID) Optional",
            "description": "Unique identifier for the shipping Address.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ShippingCustomerId": {
            "type": "string",
            "title": "ShippingCustomerId (GUID) Optional",
            "description": "Unique identifier for the shipping Customer. If this value is provided, ShippingEntityId must be excluded.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ShippingEntityId": {
            "type": "integer",
            "title": "ShippingEntityId (Integer) Optional",
            "description": "Identifier for the Location this Order will be shipped to. If this value is provided, ShippingCustomerId must be excluded."
          },
          "State": {
            "type": "string",
            "title": "State (String) Optional",
            "description": "If not provided, this value will be generated. State can be changed using this field. See OrderState for a list of acceptable values and Overview for legal state transitions.",
            "enum": [
              "Created",
              "Pending",
              "Processed",
              "Cancelled",
              "Completed"
            ]
          },
          "TenderId": {
            "type": "string",
            "title": "TenderId (String) Optional",
            "description": "An invoice number from the system that created the Order, Invoice Number in RQ."
          },
          "Items": {
            "type": "array",
            "title": "Items (Array[Item]) Optional",
            "description": "The Items in the Order.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/DropshipOrderItem"
            }
          }
        },
        "required": [
          "EntityId",
          "OrderTypeId",
          "Items"
        ]
      },
      "SalesOrder": {
        "type": "object",
        "title": "SalesOrder (Object) Required",
        "description": "",
        "properties": {
          "DateCreatedUtc": {
            "type": "string",
            "title": "DateCreatedUtc (DateTime) Required",
            "description": "An ISO 8601 UTC timestamp indicating when the sales order was created.",
            "format": "date-time"
          },
          "LocationId": {
            "type": "integer",
            "title": "LocationId (Integer) Required",
            "description": "The identifier of the company Location generating the sales order."
          },
          "CustomerId": {
            "type": "string",
            "title": "CustomerId (GUID) Required",
            "description": "The identifier of the Customer making the purchase.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ExpiryDateUtc": {
            "type": "string",
            "title": "ExpiryDateUtc (String) Optional",
            "description": "An ISO 8601 UTC timestamp indicating when the sales order should expire. If not set, RQ’s default expiry date algorithm is used. Note that the expiration of this date does not trigger any event in RQ; instead, this property can be used with your own business processes to determine when to expire sales orders.",
            "format": "date-time"
          },
          "Items": {
            "type": "array",
            "title": "Items (Array[SaleOrderItem]) Required",
            "description": "The items in the sales order. There must be at least one item in the order.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "title": "SalesOrderItem",
              "properties": {
                "LineNumber": {
                  "type": "integer",
                  "title": "LineNumber (Integer) Required",
                  "description": "The line number of the item. An incrementable integer greater than one. Must be unique within the sales order."
                },
                "ProductCatalogId": {
                  "type": "string",
                  "title": "ProductCatalogId (GUID) Required",
                  "description": "The identifier of the CatalogItem in the iQmetrix Product Library. To obtain a complete list of catalog IDs, see Get All Catalog Items",
                  "pattern": "^[0-9-A-Fa-f]{32,36}$"
                },
                "Quantity": {
                  "type": "integer",
                  "title": "Quantity (Integer) Required",
                  "description": "The number of items of this type in the order."
                },
                "Price": {
                  "type": "number",
                  "title": "Price (Decimal) Required",
                  "description": "The price of the item."
                },
                "PricingTermId": {
                  "type": "integer",
                  "title": "PricingTermId (Integer) Optional",
                  "description": "The identifier of a PricingTerm in RQ. For a complete list of pricing terms, see Get All Active Pricing Terms."
                },
                "ItemType": {
                  "type": "string",
                  "title": "ItemType (String) Required",
                  "description": "The item type. Supported values are InStock (the item is in stock) or Dropship (the item is available to be drop.",
                  "enum": [
                    "InStock",
                    "Dropship"
                  ]
                },
                "CorrelationId": {
                  "type": "string",
                  "title": "CorrelationId (String) Required",
                  "description": "An identifier that can be used to correlate the item to an identifier in an external system."
                },
                "SupplierEntityId": {
                  "type": "integer",
                  "title": "SupplierEntityId (Integer) Required",
                  "description": "When the item type is Dropship, either DropshipOrderId or SupplierEntityId must be provided. Forbidden otherwise. For Dropship item types, the SupplierEntityId associated with the product."
                },
                "SerialNumber": {
                  "type": "string",
                  "title": "SerialNumber (String) Required",
                  "description": "Required for serialized products where the quantity is 1 or -1"
                },
                "TaxLineItems": {
                  "type": "array",
                  "title": "TaxLineItems (Array[TaxLineItem]) Required",
                  "description": "A list of taxes associated with all or parts of this sales order. Either all of TaxName, TaxableAmount, Rate, and Tax must be supplied, or else IqmetrixTaxServiceId, but not both.",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "title": "TaxLineItem",
                    "description": "A tax line item which corresponds to a line item on the sales order. Either full tax information is provided (all of TaxName, TaxableAmount, Rate, and Tax) or a reference to a tax query in the iQmetrix tax service (IqTaxServiceId), but not both.",
                    "oneOf": [
                      {
                        "properties": {
                          "TaxName": {
                            "type": "string",
                            "title": "TaxName (String) Required",
                            "description": "Required if IqmetrixTaxServiceId is not specified, forbidden otherwise. The name of the tax being applied."
                          },
                          "TaxableAmount": {
                            "type": "number",
                            "title": "TaxableAmount (Decimal) Required",
                            "description": "Required if IqmetrixTaxServiceId is not specified, forbidden otherwise.The taxable amount."
                          },
                          "Rate": {
                            "type": "number",
                            "title": "Rate (Decimal) Required",
                            "description": "Required if IqmetrixTaxServiceId is not specified, forbidden otherwise. The effective tax rate."
                          },
                          "Tax": {
                            "type": "number",
                            "title": "Tax (Decimal) Required",
                            "description": "Required if IqmetrixTaxServiceId is not specified, forbidden otherwise. The amount of tax charged."
                          }
                        },
                        "required": [
                          "TaxName",
                          "TaxableAmount",
                          "Rate",
                          "Tax"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "IqmetrixTaxServiceId": {
                            "type": "string",
                            "title": "IqmetrixTaxServiceId (GUID) Required",
                            "description": "Required if TaxName, TaxableAmount, Rate, and Tax are specified, forbidden if they are. The identifier of a tax query in the iQmetrix tax service.",
                            "pattern": "^[0-9-A-Fa-f]{32,36}$"
                          }
                        },
                        "required": [
                          "IqmetrixTaxServiceId"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "LineNumber",
                "Quantity",
                "Price",
                "ItemType",
                "CorrelationId",
                "TaxLineItems",
                "SupplierEntityId"
              ]
            }
          },
          "Payments": {
            "type": "array",
            "title": "Payments (Array[Payment]) Required",
            "description": "An array of objects representing any payments that have been made on the order. The array is required, but can be empty if there are no payments.",
            "minItems": 0,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "title": "Payment",
              "properties": {
                "AuthCode": {
                  "type": "string",
                  "title": "AuthCode (String) Optional",
                  "description": "The authorization code for the payment."
                },
                "TransactionNumber": {
                  "type": "string",
                  "title": "TransactionNumber (String) Optional",
                  "description": "The transaction number of the payment."
                },
                "Token": {
                  "type": "string",
                  "title": "Token (String) Optional",
                  "description": "The token associated with the payment."
                },
                "Amount": {
                  "type": "number",
                  "title": "Amount (Decimal) Optional",
                  "description": "The amount of the payment."
                },
                "CorrelationId": {
                  "type": "string",
                  "title": "CorrelationId (String) Optional",
                  "description": "Correlates this payment with a payment record in another system. Although the Sales Order Service retains the full string, the string is trimmed to 30 characters when submitted to RQ."
                }
              }
            }
          },
          "TaxCalculationResultId": {
            "type": "string",
            "title": "TaxCalculationResultId (GUID) Required",
            "description": "The identifier of a tax calculation returned by the IQ Tax Service.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "BillingAddressId": {
            "type": "string",
            "title": "BillingAddressId (GUID) Optional",
            "description": "The identifier of a customer billing Address. In the future, this address must exist in the CRM service. Currently, it is not validated.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ShippingAddressId": {
            "type": "string",
            "title": "ShippingAddressId (GUID) Optional",
            "description": "The identifier of a customer shipping Address. In the future, this address must exist in the CRM service. Currently, it is not validated.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "PrintableId": {
            "type": "string",
            "title": "PrintableId (String) Required",
            "description": "An identifier from the external system that can be used to reference the order; for example, the online order confirmation number. This identifier is mentioned in the comments section of the sales order and the invoices. Maximum 50 characters.",
            "maxLength": 50
          },
          "DropshipOrderId": {
            "type": "string",
            "title": "DropshipOrderId (GUID) Required",
            "description": "When the item type is Dropship, either DropshipOrderId or SupplierEntityId must be provided. Forbidden otherwise. The identifier for this order in the Order service.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "UserId": {
            "type": "integer",
            "title": "UserId (Integer) Optional",
            "description": "The identifier of a valid User in RQ. This user must have sufficient permissions to create sales orders, add products, and create invoices at this location."
          },
          "ShippingLineItems": {
            "type": "array",
            "title": "ShippingLineItems (Array[ShippingLineItem]) Optional",
            "description": "A list of shipping line items associated with all or parts of this sales order.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "title": "ShippingLineItem",
              "properties": {
                "LineNumber": {
                  "type": "integer",
                  "title": "LineNumber (Integer) Optional",
                  "description": "The line number of the shipping item. An incrementable integer greater than one. Must be unique within the list of shipping items."
                },
                "Type": {
                  "type": "string",
                  "title": "Type (String) Optional",
                  "description": "The shipping type."
                },
                "Amount": {
                  "type": "number",
                  "title": "Amount (Decimal) Optional",
                  "description": "The shipping amount."
                },
                "CorrelationId": {
                  "type": "string",
                  "title": "CorrelationId (String) Optional",
                  "description": "An identifier that can be used to correlate this shipping information with shipping information in another system."
                },
                "RetailerCatalogId": {
                  "type": "string",
                  "title": "RetailerCatalogId (GUID) Optional",
                  "description": "The identifier of the CatalogItem in the retailer’s catalog.",
                  "pattern": "^[0-9-A-Fa-f]{32,36}$"
                },
                "AssociatedLineItems": {
                  "type": "array",
                  "title": "AssociatedLineItems (Array[integer]) Optional",
                  "description": "The LineItem number(s) of the sales order item(s) being shipped using this shipping line item.",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "DiscountLineItems": {
            "type": "array",
            "title": "DiscountLineItems (Array[DiscountLineItem]) Optional",
            "description": "A list of discount line items associated with all or parts of this sales order.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "title": "DiscountLineItem",
              "properties": {
                "LineNumber": {
                  "type": "integer",
                  "title": "LineNumber (Integer) Optional",
                  "description": "The line number of the discount item. An incrementable integer greater than one. Must be unique within the list of discount items."
                },
                "Amount": {
                  "type": "number",
                  "title": "Amount (Decimal) Optional",
                  "description": "The amount the item has been discounted."
                },
                "Name": {
                  "type": "string",
                  "title": "Name (String) Optional",
                  "description": "The name of the discount being applied."
                },
                "DiscountCode": {
                  "type": "string",
                  "title": "DiscountCode (String) Optional",
                  "description": "The code for the discount being applied."
                },
                "AssociatedLineItems": {
                  "type": "array",
                  "title": "AssociatedLineItems (Array[integer]) Optional",
                  "description": "The LineItem number(s), if any, of the sales order item(s) being discounted using this discount.",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "integer"
                  }
                },
                "RetailerCatalogId": {
                  "type": "string",
                  "title": "RetailerCatalogId (GUID) Optional",
                  "description": "The identifier of the CatalogItem in the retailer’s catalog.",
                  "pattern": "^[0-9-A-Fa-f]{32,36}$"
                }
              }
            }
          }
        },
        "required": [
          "DateCreatedUtc",
          "LocationId",
          "CustomerId",
          "Items",
          "Payments",
          "PrintableId",
          "DropshipOrderId"
        ]
      },
      "Customer": {
        "type": "object",
        "title": "CustomerFull (Object) Required",
        "description": "A CustomerFull record includes all the information captured for a given customer. POSTing a CustomerFull record provides an easy way of specifying all related information for a customer at once. Note that PUT is not supported on CustomerFull resources (for example, to update an address). To modify a customer record, PUT to the endpoint of the constituent resource (for example, the Address resource).",
        "properties": {
          "Id": {
            "type": "string",
            "title": "Id (GUID) Required on update only",
            "description": "The customer identifier.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "CustomerTypeId": {
            "type": "integer",
            "title": "CustomerTypeId (Integer) Required",
            "description": "The code for the customer type. For supported values, see CustomerTypeId.",
            "enum": [
              1,
              2,
              3
            ]
          },
          "PrimaryName": {
            "type": "string",
            "title": "PrimaryName (String) Optional",
            "description": "For a person, the first or given name. For an organization, business, or division, the full name.",
            "maxLength": 100
          },
          "MiddleName": {
            "type": "string",
            "title": "MiddleName (String) Optional",
            "description": "The customer’s middle name.",
            "maxLength": 50
          },
          "FamilyName": {
            "type": "string",
            "title": "FamilyName (String) Optional",
            "description": "The customer’s surname or last name.",
            "maxLength": 100
          },
          "AlternateName": {
            "type": "string",
            "title": "AlternateName (String) Optional",
            "description": "The alias or preferred name for the customer.",
            "maxLength": 50
          },
          "Title": {
            "type": "string",
            "title": "Title (String) Optional",
            "description": "The title to be used in customer salutations.",
            "maxLength": 50
          },
          "DateOfBirth": {
            "type": "string",
            "title": "DateOfBirth (DateTime) Optional",
            "description": "The customer’s birth date, in UTC. You can use a full timestamp or shortened form (yyyy-mm-dd).",
            "oneOf": [
              {
                "format": "date-time"
              },
              {
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
              }
            ]
          },
          "Disabled": {
            "type": "boolean",
            "title": "Disabled (Boolean) Optional",
            "description": "A flag indicating whether or not this customer is disabled. Deleting a customer is interpreted as a Disable operation, as a customer record cannot be fully deleted. The default is false. When the Disabled flag is set to true, the customer can still be retrieved and updated normally."
          },
          "DoNotContact": {
            "type": "boolean",
            "title": "DoNotContact (Boolean) Optional",
            "description": "A flag indicating this customer is private; that is, it is not to be used by external systems (such as a marketing system). If not provided when the record is created, this field is set to true."
          },
          "Notes": {
            "type": "string",
            "title": "Notes (String) Optional",
            "description": "Any notes related to this customer.",
            "maxLength": 2000
          },
          "Addresses": {
            "type": "array",
            "title": "Addresses (Array[Address]) Optional",
            "description": "The Address resource in CustomerFull records is as for other cases, except that CustomerId is not specified.",
            "items": {
              "$ref": "#/definitions/Address"
            },
            "minItems": 1
          },
          "ContactMethods": {
            "type": "array",
            "title": "ContactMethods (Array[ContactMethod]) Optional",
            "description": "The ContactMethod resource for CustomerFull records is as in other cases, except that CustomerId is not specified.",
            "items": {
              "$ref": "#/definitions/ContactMethod"
            },
            "minItems": 1
          }
        },
        "required": [
          "CustomerTypeId"
        ]
      },
      "BillingAddress": {
        "$ref": "#/definitions/Address"
      },
      "ShippingAddress": {
        "$ref": "#/definitions/Address"
      }
    },
    "required": [
      "DropshipOrder",
      "SalesOrder",
      "Customer",
      "BillingAddress",
      "ShippingAddress"
    ],
    "definitions": {
      "Address": {
        "type": "object",
        "title": "Address (Object)",
        "description": "The Address resource records information for a single customer address. You can define multiple addresses for a customer.",
        "properties": {
          "Id": {
            "type": "string",
            "title": "Id (GUID) Required on update only",
            "description": "The address identifier.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "CustomerId": {
            "type": "string",
            "title": "CustomerId (GUID) Required on update only",
            "description": "The identifier of the Customer associated with this address.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "AddressTypeId": {
            "type": "integer",
            "title": "AddressTypeId (Integer) Required",
            "description": "The code for the address type. For supported values, see AddressTypeId.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ]
          },
          "CountryCode": {
            "type": "string",
            "title": "CountryCode (String) Required",
            "description": "The ISO 3166-2 alpha-2 code for the country where this address is located. To see the list of these codes, see Getting All Countries."
          },
          "StateCode": {
            "type": "string",
            "title": "StateCode (String) Required",
            "description": "The ISO 3166-2 alpha-2 Region code for the state or province where this address resides. To see a list of these codes, see Getting All Countries. The state code must actually belong to the specified country."
          },
          "AttentionTo": {
            "type": "string",
            "title": "AttentionTo (String) Optional",
            "description": "The name of the person or department residing at this address."
          },
          "Default": {
            "type": "boolean",
            "title": "Default (Boolean) Optional",
            "description": "A flag indicating whether this address is the default address for the customer."
          },
          "DoNotContact": {
            "type": "boolean",
            "title": "DoNotContact (Boolean) Optional",
            "description": "A flag indicating whether this address is private and not to be used by any external systems (such as a marketing system). If not provided when the record is created, this field is set to true."
          },
          "Email": {
            "type": "string",
            "title": "Email (String) Optional",
            "description": "The contact email for this address. If provided, the format of the address must be valid.",
            "format": "email"
          },
          "Locality": {
            "type": "string",
            "title": "Locality (String) Optional",
            "description": "The locality (for example, city, town, or hamlet) of this address."
          },
          "Notes": {
            "type": "string",
            "title": "Notes (String) Optional",
            "description": "Any notes related to this address."
          },
          "Phone": {
            "type": "string",
            "title": "Phone (String) Optional",
            "description": "The contact phone number for this address."
          },
          "PostalCode": {
            "type": "string",
            "title": "PostalCode (String) Optional",
            "description": "The postal code/zip code for this address."
          },
          "PostOfficeBoxNumber": {
            "type": "string",
            "title": "PostOfficeBoxNumber (String) Optional",
            "description": "The post office box number for this address."
          },
          "StreetAddress1": {
            "type": "string",
            "title": "StreetAddress1 (String) Optional",
            "description": "Line 1 of the street address."
          },
          "StreetAddress2": {
            "type": "string",
            "title": "StreetAddress2 (String) Optional",
            "description": "Line 2 of the street address."
          }
        },
        "required": [
          "AddressTypeId",
          "CountryCode",
          "StateCode"
        ]
      },
      "ContactMethod": {
        "type": "object",
        "title": "ContactMethod (Object)",
        "description": "A ContactMethod resource records the information for contacting a customer. You can define multiple contact methods for a customer.",
        "oneOf": [
          {
            "$ref": "#/definitions/ContactMethodCategoryPhone"
          },
          {
            "$ref": "#/definitions/ContactMethodCategoryEmail"
          },
          {
            "$ref": "#/definitions/ContactMethodCategoryOther"
          }
        ],
        "required": [
          "ContactMethodCategoryId",
          "ContactMethodTypeId"
        ]
      },
      "ContactMethodBase": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "title": "Id (GUID) Required on update only",
            "description": "The identifier of the contact method.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "CustomerId": {
            "type": "string",
            "title": "CustomerId (GUID) Required on update only",
            "description": "The identifier of the Customer associated with the contact method.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ContactMethodCategoryId": {
            "type": "integer",
            "title": "ContactMethodCategoryId (Integer) Required",
            "description": "The numeric code for the contact method category. For a list of supported types and categories, see ContactMethod Types and Categories.",
            "enum": [
              1,
              2,
              3
            ]
          },
          "ContactMethodTypeId": {
            "type": "integer",
            "title": "ContactMethodTypeId (Integer) Required",
            "description": "The code representing the contact method type. For a list of supported types and categories, see ContactMethod Types and Categories.",
            "enum": [
              1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ]
          },
          "Default": {
            "type": "boolean",
            "title": "Default (Boolean) Optional",
            "description": "A flag indicating whether this is the default contact method for the customer."
          },
          "DoNotContact": {
            "type": "boolean",
            "title": "DoNotContact (Boolean) Optional",
            "description": "A flag indicating this customer is private; that is, it is not to be used by external systems (such as a marketing system). If not provided when the record is created, this field is set to true."
          },
          "Notes": {
            "type": "string",
            "title": "Notes (String) Optional",
            "description": "Notes related to this contact method."
          },
          "Value": {
            "type": "string",
            "title": "Value (String) Optional",
            "description": "The information for that contact method: for example, the actual email address or phone number. Email addresses are validated (but not verified)."
          }
        }
      },
      "ContactMethodCategoryPhone": {
        "description": "ContactMethodCategory == 'Phone'",
        "allOf": [
          {
            "properties": {
              "ContactMethodCategoryId": {
                "type": "integer",
                "title": "ContactMethodCategoryId (Integer) Required",
                "description": "The numeric code for the contact method category. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  1
                ]
              },
              "ContactMethodTypeId": {
                "type": "integer",
                "title": "ContactMethodTypeId (Integer) Required",
                "description": "The code representing the contact method type. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  1,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/ContactMethodBase"
          }
        ]
      },
      "ContactMethodCategoryEmail": {
        "description": "ContactMethodCategory == 'Email'",
        "allOf": [
          {
            "properties": {
              "ContactMethodCategoryId": {
                "type": "integer",
                "title": "ContactMethodCategoryId (Integer) Required",
                "description": "The numeric code for the contact method category. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  2
                ]
              },
              "ContactMethodTypeId": {
                "type": "integer",
                "title": "ContactMethodTypeId (Integer) Required",
                "description": "The code representing the contact method type. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  9,
                  10,
                  11
                ]
              },
              "Value": {
                "type": "string",
                "title": "Value (String) Optional",
                "description": "The information for that contact method: for example, the actual email address or phone number. Email addresses are validated (but not verified).",
                "format": "email"
              }
            }
          },
          {
            "$ref": "#/definitions/ContactMethodBase"
          }
        ]
      },
      "ContactMethodCategoryOther": {
        "description": "ContactMethodCategory == 'Other'",
        "allOf": [
          {
            "properties": {
              "ContactMethodCategoryId": {
                "type": "integer",
                "title": "ContactMethodCategoryId (Integer) Required",
                "description": "The numeric code for the contact method category. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  3
                ]
              },
              "ContactMethodTypeId": {
                "type": "integer",
                "title": "ContactMethodTypeId (Integer) Required",
                "description": "The code representing the contact method type. For a list of supported types and categories, see ContactMethod Types and Categories.",
                "enum": [
                  12,
                  13,
                  14,
                  15,
                  16,
                  17
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/ContactMethodBase"
          }
        ]
      },
      "CustomerExtension": {
        "type": "object",
        "title": "CustomerExtension (Object)",
        "description": "A CustomerExtension resource sets the value for an extension (CustomerExtensionType) for a given customer.",
        "properties": {
          "Id": {
            "type": "string",
            "title": "Id (GUID) Required on update",
            "description": "The identifier of the extension.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "CustomerId": {
            "type": "string",
            "title": "CustomerId (GUID) Required on update and standalone insert",
            "description": "The identifier of the Customer.",
            "pattern": "^[0-9-A-Fa-f]{32,36}$"
          },
          "ExtensionTypeId": {
            "type": "integer",
            "title": "ExtensionTypeId (Integer) Required",
            "description": "The identifier of the extension type. For supported values, see ExtensionTypeId."
          },
          "Value": {
            "type": "string",
            "title": "Value (String) Optional",
            "description": "The new value for the custom property."
          }
        },
        "required": [
          "ExtensionTypeId"
        ]
      },
      "DropshipOrderItem": {
        "type": "object",
        "title": "Item",
        "oneOf": [
          {
            "$ref": "#/definitions/DropshipOrderItemTypeDropShip"
          },
          {
            "$ref": "#/definitions/DropshipOrderItemTypeInStock"
          },
          {
            "$ref": "#/definitions/DropshipOrderItemTypeEcommerce"
          },
          {
            "$ref": "#/definitions/DropshipOrderItemTypeShipping"
          }
        ],
        "required": [
          "ItemStatusId",
          "ItemTypeId",
          "SupplierEntityId",
          "SKU"
        ]
      },
      "DropshipOrderItemBase": {
        "type": "object",
        "properties": {
          "ItemTypeId": {
            "type": "string",
            "title": "ItemTypeId (String) Required",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ]
          },
          "ItemStatusId": {
            "type": "integer",
            "title": "ItemStatusId (Integer) Required",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ]
          },
          "Cost": {
            "type": "number",
            "title": "Cost (Decimal) Optional",
            "description": "Cost the retailer paid for the product, defaults to 0."
          },
          "Description": {
            "type": "string",
            "title": "Description (String) Optional",
            "description": "Description of this Item."
          },
          "Index": {
            "type": "integer",
            "title": "Index (Integer) Optional",
            "description": "A value used for sorting Items, such as in a shopping cart."
          },
          "ListPrice": {
            "type": "number",
            "title": "ListPrice (Decimal) Optional",
            "description": "Price retailer is selling the product for (could be regular or sale price). Defaults to 0."
          },
          "Notes": {
            "type": "string",
            "title": "Notes (String) Optional",
            "description": "Notes for this Item."
          },
          "ProductId": {
            "type": "string",
            "title": "ProductId (String) Optional",
            "description": "Identifier for a CatalogItem, if provided must be unique for each Item on the Order."
          },
          "Quantity": {
            "type": "integer",
            "title": "Quantity (Integer) Optional",
            "description": "Amount of this Item In Stock, defaults to 0."
          },
          "SellingPrice": {
            "type": "number",
            "title": "SellingPrice (Decimal) Optional",
            "description": "The price the item was actually sold for, defaults to 0."
          },
          "SerialNumbers": {
            "type": "array",
            "title": "SerialNumbers (Array[string]) Optional",
            "description": "Serial numbers intended for product serialization.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "SKU": {
            "type": "string",
            "title": "SKU (String) Optional",
            "description": "SKU for this Item."
          },
          "ShippingOptionId": {
            "type": "string",
            "title": "ShippingOptionId (String) Optional",
            "description": "Identifier for the ShippingOption that this Item will use."
          },
          "SupplierEntityId": {
            "type": "integer",
            "title": "SupplierEntityId (Integer) Optional",
            "description": "Identifier for the Supplier of this Item."
          },
          "SupplierReference": {
            "type": "string",
            "title": "SupplierReference (String) Optional",
            "description": "May be used for additional Supplier reference information."
          },
          "TrackingInformation": {
            "type": "array",
            "title": "TrackingInformation (Array[object]) Optional",
            "description": "Tracking information in the form of key-value pairs.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "Quantity": {
                  "type": "integer",
                  "title": "Quantity (Integer) Required",
                  "description": "Number of items being tracked."
                },
                "TrackingNumber": {
                  "type": "string",
                  "title": "TrackingNumber (String) Required",
                  "description": "Tracking number."
                }
              },
              "required": [
                "Quantity",
                "TrackingNumber"
              ]
            }
          }
        }
      },
      "DropshipOrderItemTypeDropShip": {
        "description": "ItemTypeId == '1' (DropShip)",
        "allOf": [
          {
            "properties": {
              "ItemTypeId": {
                "type": "string",
                "title": "ItemTypeId (String) Required",
                "enum": [
                  "1"
                ]
              },
              "ItemStatusId": {
                "type": "integer",
                "title": "ItemStatusId (Integer) Required",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/DropshipOrderItemBase"
          }
        ]
      },
      "DropshipOrderItemTypeInStock": {
        "description": "ItemTypeId == '2' (InStock)",
        "allOf": [
          {
            "properties": {
              "ItemTypeId": {
                "type": "string",
                "title": "ItemTypeId (String) Required",
                "enum": [
                  "2"
                ]
              },
              "ItemStatusId": {
                "type": "integer",
                "title": "ItemStatusId (Integer) Required",
                "enum": [
                  9,
                  10,
                  11,
                  12,
                  16
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/DropshipOrderItemBase"
          }
        ]
      },
      "DropshipOrderItemTypeEcommerce": {
        "description": "ItemTypeId == '3' (eCommerce)",
        "allOf": [
          {
            "properties": {
              "ItemTypeId": {
                "type": "string",
                "title": "ItemTypeId (String) Required",
                "enum": [
                  "3"
                ]
              },
              "ItemStatusId": {
                "type": "integer",
                "title": "ItemStatusId (Integer) Required",
                "enum": [
                  13,
                  14,
                  17
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/DropshipOrderItemBase"
          }
        ]
      },
      "DropshipOrderItemTypeShipping": {
        "description": "ItemTypeId == '4' (Shipping)",
        "allOf": [
          {
            "properties": {
              "ItemTypeId": {
                "type": "string",
                "title": "ItemTypeId (String) Required",
                "enum": [
                  "4"
                ]
              },
              "ItemStatusId": {
                "type": "integer",
                "title": "ItemStatusId (Integer) Required",
                "enum": [
                  15
                ]
              }
            }
          },
          {
            "$ref": "#/definitions/DropshipOrderItemBase"
          }
        ]
      }
    }
  },
  "tags": [
    "Put",
    "Order",
    "SalesOrder"
  ],
  "audit": {}
}
